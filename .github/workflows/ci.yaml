name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master


jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.0
      with:
        submodules: true
    - name: Setup Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Cache PyPI
      uses: actions/cache@v2.1.6
      with:
        key: pip-lint-${{ hashFiles('requirements/*.txt') }}
        path: ~/.cache/pip
        restore-keys: |
            pip-lint-
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v2
      with:
        path: requirements/requirements.dev.txt
    - name: Pre-Commit hooks
      uses: pre-commit/action@v2.0.3
    - name: Build docs
      run:
        make doc

  test:
    name: Test
    needs: lint
    strategy:
      matrix:
        pyver: ['3.8', '3.9', '3.10']
        os: [ubuntu, macos, windows]
        include:
          - pyver: '3.6'
            os: ubuntu
          - pyver: '3.7'
            os: ubuntu
      fail-fast: false
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.pyver }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyver }}
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"    # - name: Cache
    - name: Cache PyPI
      uses: actions/cache@v2
      with:
        key: pip-ci-${{ runner.os }}-${{ matrix.pyver }}-${{ hashFiles('requirements/*.txt') }}
        path: ${{ steps.pip-cache.outputs.dir }}
        restore-keys: |
            pip-ci-${{ runner.os }}-${{ matrix.pyver }}
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v2
      with:
        path: requirements/requirements.dev.txt
    - name: Install itself
      run: |
        pip install -e .
    - name: Run unittests
      env:
        COLOR: 'yes'
      run: |
        pytest -v
    - name: Upload coverage
      uses: codecov/codecov-action@v2.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unit
        fail_ci_if_error: false
